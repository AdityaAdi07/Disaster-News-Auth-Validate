/**
 * Disaster Alerts Model
 * Represents disaster alerts generated by the system or issued by admins/agencies
 */

const mongoose = require('mongoose');

// Define schema
const disasterAlertSchema = new mongoose.Schema({
    timestamp: {
        type: Date,
        required: true,
        default: Date.now
    },
    location: {
        type: String,
        required: true
    },
    disaster_type: {
        type: String,
        enum: ['flood', 'earthquake', 'fire', 'cyclone', 'landslide'],
        required: true
    },
    status: {
        type: String,
        enum: ['active', 'resolved'],
        default: 'active'
    },
    severity: {
        type: String,
        enum: ['low', 'medium', 'high'],
        required: true
    },
    verified: {
        type: Boolean,
        default: false
    },
    coordinates: {
        type: [Number], // [latitude, longitude]
        required: true,
        validate: {
            validator: function(v) {
                return v.length === 2;
            },
            message: 'Coordinates must be [latitude, longitude]'
        }
    },
    content: {
        type: String
    },
    source: {
        type: String,
        default: 'system'
    },
    affected_area_radius: {
        type: Number, // in kilometers
        default: 5
    },
    viewed: {
        type: Boolean,
        default: false
    },
    resolved_at: {
        type: Date
    },
    resolved_by: {
        type: String
    },
    created_by: {
        type: String,
        default: 'system'
    }
}, {
    timestamps: true
});

// Create indexes
disasterAlertSchema.index({ location: 1 });
disasterAlertSchema.index({ disaster_type: 1 });
disasterAlertSchema.index({ status: 1 });
disasterAlertSchema.index({ severity: 1 });
disasterAlertSchema.index({ verified: 1 });
disasterAlertSchema.index({ timestamp: -1 });

// Pre-save middleware to set resolved_at when status changes to resolved
disasterAlertSchema.pre('save', function(next) {
    if (this.isModified('status') && this.status === 'resolved' && !this.resolved_at) {
        this.resolved_at = new Date();
    }
    next();
});

// Create model
const DisasterAlert = mongoose.model('DisasterAlert', disasterAlertSchema);

// Export model
module.exports = DisasterAlert;
